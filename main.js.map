{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/component/hospital/hospital.component.css","webpack:///./src/app/component/hospital/hospital.component.html","webpack:///./src/app/component/hospital/hospital.component.ts","webpack:///./src/app/form/add-patient/add-patient.component.css","webpack:///./src/app/form/add-patient/add-patient.component.html","webpack:///./src/app/form/add-patient/add-patient.component.ts","webpack:///./src/app/form/login-hospital/login-hospital.component.css","webpack:///./src/app/form/login-hospital/login-hospital.component.html","webpack:///./src/app/form/login-hospital/login-hospital.component.ts","webpack:///./src/app/form/registr-hostpital/registr-hostpital.component.css","webpack:///./src/app/form/registr-hostpital/registr-hostpital.component.html","webpack:///./src/app/form/registr-hostpital/registr-hostpital.component.ts","webpack:///./src/app/service/hospital.service.ts","webpack:///./src/app/service/patient.service.ts","webpack:///./src/app/service/user-details.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { RegistrHostpitalComponent } from './form/registr-hostpital/registr-hostpital.component';\nimport { AddPatientComponent } from './form/add-patient/add-patient.component';\n\nimport { HospitalComponent } from './component/hospital/hospital.component';\nimport { LoginHospitalComponent } from './form/login-hospital/login-hospital.component';\nconst routes: Routes = [\n  {path:\"addPatient\" , component:AddPatientComponent},\n  {path:\"regiserHospital\",component:RegistrHostpitalComponent},\n  {path:\"\",component:LoginHospitalComponent},\n  {path:\"hospital\",component:HospitalComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"#leftNavar{\\n \\n    padding: 0px;\\n    border-radius: unset;\\n}\\n#mainContent{\\n    box-shadow: 0px 2px 9px #d4d2d2;\\n    height: 80vh;\\n}   \\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0lBRUksYUFBYTtJQUNiLHFCQUFxQjtDQUN4QjtBQUNEO0lBQ0ksZ0NBQWdDO0lBQ2hDLGFBQWE7Q0FDaEIiLCJmaWxlIjoic3JjL2FwcC9hcHAuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIiNsZWZ0TmF2YXJ7XG4gXG4gICAgcGFkZGluZzogMHB4O1xuICAgIGJvcmRlci1yYWRpdXM6IHVuc2V0O1xufVxuI21haW5Db250ZW50e1xuICAgIGJveC1zaGFkb3c6IDBweCAycHggOXB4ICNkNGQyZDI7XG4gICAgaGVpZ2h0OiA4MHZoO1xufSAgICJdfQ== */\"","module.exports = \"\\n<nav class=\\\"navbar navbar-expand-md bg-dark navbar-dark\\\">\\n  <!-- Brand -->\\n  <a class=\\\"navbar-brand\\\" href=\\\"#\\\">Hospital management</a>\\n\\n  <!-- Toggler/collapsibe Button -->\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#collapsibleNavbar\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n\\n  <!-- Navbar links -->\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"collapsibleNavbar\\\">\\n    <ul class=\\\"navbar-nav\\\">\\n      <!-- <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" href=\\\"#\\\">Link</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" href=\\\"#\\\">Link</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" href=\\\"#\\\">Link</a>\\n      </li> -->\\n    </ul>\\n  </div>\\n  <div class=\\\"navbar-collapse collapse w-100 order-3 dual-collapse2\\\">\\n      <ul class=\\\"navbar-nav ml-auto\\\">\\n          <li class=\\\"nav-item\\\">\\n      \\n          </li>\\n          <li class=\\\"nav-item\\\">\\n              <a routerLink=\\\"\\\" *ngIf=\\\"userservice.isUserLoggedIn()\\\">Logout</a>\\n          </li>\\n      </ul>\\n  </div>\\n</nav>\\n\\n<div class=\\\"row\\\" style=\\\"margin-top: 4%;\\\">\\n  <div class=\\\"col-md-2\\\" id=\\\"leftNavar\\\">\\n      <ul class=\\\"list-group\\\" *ngIf= \\\"userservice.isUserLoggedIn()\\\">\\n          <li class=\\\"list-group-item \\\"><a routerLink=\\\"addPatient\\\">Add patient</a></li>\\n          <li class=\\\"list-group-item\\\"><a routerLink=\\\"hospital\\\">View patient</a></li>\\n          <li class=\\\"list-group-item\\\"><a routerLink=\\\"searchPatient\\\">Search patient</a></li>\\n        </ul>\\n  </div>\\n  <div class=\\\"col-md-9\\\" id=\\\"mainContent\\\">\\n\\n<router-outlet></router-outlet>\\n  </div>\\n</div>\\n\"","import { Component } from '@angular/core';\nimport {UserDetailsService} from './service/user-details.service';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'hospital';\n\n  constructor(\n    private userservice:UserDetailsService\n  ){\n    console.log(this.userservice.isUserLoggedIn());\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport {HttpClientModule} from '@angular/common/http';\nimport { AddPatientComponent } from './form/add-patient/add-patient.component';\nimport {PatientService} from \"./service/patient.service\";\nimport {FormsModule} from '@angular/forms';\nimport { ToastrModule } from 'ng6-toastr-notifications';\nimport { RegistrHostpitalComponent } from './form/registr-hostpital/registr-hostpital.component';\nimport {HospitalService} from './service/hospital.service';\nimport { LoginHospitalComponent } from './form/login-hospital/login-hospital.component';\nimport { HospitalComponent } from './component/hospital/hospital.component';\nimport {UserDetailsService} from './service/user-details.service';\n@NgModule({\n  declarations: [\n    AppComponent,\n    AddPatientComponent,\n    RegistrHostpitalComponent,\n    LoginHospitalComponent,\n    HospitalComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    BrowserAnimationsModule,\n    ToastrModule.forRoot()\n  ],\n  providers: [PatientService,HospitalService,UserDetailsService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"#UnReleasedTb{\\n    min-height: 40%;\\n    max-height: 70%;\\n    border-top: 2px solid green;\\n    overflow: overlay;\\n    border-bottom:2px solid green;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50L2hvc3BpdGFsL2hvc3BpdGFsLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxnQkFBZ0I7SUFDaEIsZ0JBQWdCO0lBQ2hCLDRCQUE0QjtJQUM1QixrQkFBa0I7SUFDbEIsOEJBQThCO0NBQ2pDIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50L2hvc3BpdGFsL2hvc3BpdGFsLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIjVW5SZWxlYXNlZFRie1xuICAgIG1pbi1oZWlnaHQ6IDQwJTtcbiAgICBtYXgtaGVpZ2h0OiA3MCU7XG4gICAgYm9yZGVyLXRvcDogMnB4IHNvbGlkIGdyZWVuO1xuICAgIG92ZXJmbG93OiBvdmVybGF5O1xuICAgIGJvcmRlci1ib3R0b206MnB4IHNvbGlkIGdyZWVuO1xufSJdfQ== */\"","module.exports = \"\\n    <div class=\\\"col-md-12\\\" id=\\\"UnReleasedTb\\\">\\n      <h3 class=\\\"text-info\\\">Un-Released patient</h3>\\n      <table class=\\\"table table-stripped\\\">\\n        <thead>\\n          <tr>\\n            <td>Name</td>\\n            <td>Contact</td>\\n            <td>Description</td>\\n            <td>Building</td>\\n            <td>Room</td>\\n            <td>Billing</td>\\n            <td>State</td>\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr *ngFor=\\\"let pt of patientUnReleased\\\">\\n            <td>{{pt.name}}</td>\\n            <td>{{pt.cont}}</td>\\n            <td>{{pt.descr}}</td>\\n            <td>{{pt.building}}</td>\\n            <td>{{pt.room}}</td>\\n            <td>{{pt.bill}}\\n              <p class=\\\"text-info\\\" *ngIf=\\\"pt.bill === null\\\"> <i class=\\\"fa fa-inr\\\" aria-hidden=\\\"true\\\"></i>\\n                0.0 </p>\\n            </td>\\n            <td><button (click)=\\\"AddBills(pt)\\\" data-toggle=\\\"modal\\\" data-target=\\\"#billModel\\\"\\n                class=\\\"btn btn-info btn-sm\\\"><i class=\\\"fa fa-plus\\\" aria-hidden=\\\"true\\\"></i>\\n\\n                Bills</button></td>\\n            <td><button class=\\\"btn btn-warning btn-sm\\\" *ngIf=\\\"pt.state === 'FALSE'\\\" [disabled]=\\\"pt.state === 'FALSE'\\\"\\n                (click)=\\\"releasePatient(pt)\\\">Released</button>\\n              <button class=\\\"btn btn-success btn-sm\\\" *ngIf=\\\"pt.state != 'FALSE'\\\"\\n                (click)=\\\"releasePatient(pt)\\\"><i class=\\\"fa fa-trash-o\\\" aria-hidden=\\\"true\\\"></i>\\n                Release</button>\\n            </td>\\n          </tr>\\n        </tbody>\\n      </table>\\n    </div>\\n\\n\\n    <div class=\\\"col-md-12\\\" id=\\\"releasedPatient\\\">\\n      <h3 class=\\\"text-info\\\">Released patient</h3>\\n      <table class=\\\"table table-stripped\\\">\\n          <thead>\\n            <tr>\\n              <td>Name</td>\\n              <td>Contact</td>\\n              <td>Description</td>\\n              <td>Building</td>\\n              <td>Room</td>\\n              <td>Billing</td>\\n              <td>State</td>\\n            </tr>\\n          </thead>\\n          <tbody>\\n            <tr *ngFor=\\\"let pt of patientReleased\\\">\\n              <td>{{pt.name}}</td>\\n              <td>{{pt.cont}}</td>\\n              <td>{{pt.descr}}</td>\\n              <td>{{pt.building}}</td>\\n              <td>{{pt.room}}</td>\\n              <td> <i class=\\\"fa fa-inr\\\" aria-hidden=\\\"true\\\"></i>\\n                {{pt.bill}}\\n\\n                \\n              </td>\\n              <td><button (click)=\\\"AddBills(pt)\\\" [disabled]=\\\"pt.state === 'FALSE'\\\" data-toggle=\\\"modal\\\" data-target=\\\"#billModel\\\"\\n                  class=\\\"btn btn-info btn-sm\\\"><i class=\\\"fa fa-plus\\\" aria-hidden=\\\"true\\\"></i>\\n\\n                  Bills</button></td>\\n              <td><button class=\\\"btn btn-warning btn-sm\\\" *ngIf=\\\"pt.state === 'FALSE'\\\" [disabled]=\\\"pt.state === 'FALSE'\\\"\\n                  (click)=\\\"releasePatient(pt)\\\">Released</button>\\n                <button class=\\\"btn btn-success btn-sm\\\" *ngIf=\\\"pt.state != 'FALSE'\\\"\\n                  (click)=\\\"releasePatient(pt)\\\"><i class=\\\"fa fa-trash-o\\\" aria-hidden=\\\"true\\\"></i>\\n                  Release</button>\\n              </td>\\n            </tr>\\n          </tbody>\\n        </table>\\n    </div>\\n  \\n\\n\\n<!-- The Modal -->\\n<div class=\\\"modal\\\" id=\\\"billModel\\\">\\n  <div class=\\\"modal-dialog\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title\\\">Modal Heading</h4>\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <form #bill=\\\"ngForm\\\" (ngSubmit)=\\\"addPatientBills(bill.value)\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"\\\">\\n              Enter Amount:\\n            </label>\\n            <input class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"Bills\\\" ngModel>\\n          </div>\\n\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"\\\">Discount:</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"discount\\\" ngModel>\\n          </div>\\n          <input type=\\\"submit\\\" class=\\\"btn btn-primary btn-sm\\\" value=\\\"Add\\\">\\n        </form>\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" data-dismiss=\\\"modal\\\">Close</button>\\n      </div>\\n\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { PatientService } from '../../service/patient.service'\nimport { HospitalService } from '../../service/hospital.service';\n\nimport { ToastrManager } from 'ng6-toastr-notifications';\n@Component({\n  selector: 'app-hospital',\n  templateUrl: './hospital.component.html',\n  styleUrls: ['./hospital.component.css']\n})\nexport class HospitalComponent implements OnInit {\n\n  patientList: any = [];\n  patientReleased:any = [];\n  patientUnReleased:any = [];\n  patientIdBills: any = \"\";\n  constructor(\n    private patient: PatientService,\n    private hospital: HospitalService,\n    private toaster: ToastrManager\n  ) { }\n\n  ngOnInit() {\n      this.patientLists();\n  }\n\n  patientLists() : void {\n    this.patient.patientList().subscribe(\n      (response) => {\n        console.log(response);\n        this.patientList = response;\n        this.patientReleased = this.patientList.filter(dt=>dt.state === \"FALSE\");\n        this.patientUnReleased = this.patientList.filter(dt=>dt.state === \"TRUE\");\n      },\n      (error) => {\n\n      }\n    )\n  }\n  AddBills(patient): void {\n    this.patientIdBills = patient.id;\n  }\n\n  //=====add patient bills\n  addPatientBills(bills): void {\n    bills['id'] = this.patientIdBills;\n    var dis = bills.discount / 100;\n    bills['Bills'] = bills.Bills - (bills.Bills * dis)\n    this.hospital.addBills(bills).subscribe(\n      (response) => {\n        this.toaster.successToastr(response.msg, \"Success!\");\n      },\n      (error) => {\n        this.toaster.errorToastr(\"Error\", \"Error!\");\n      }\n    )\n  }\n\n  releasePatient(patient) : void {\n    if(patient.state === \"TRUE\"){\n        patient['state'] = \"FALSE\";\n    }else{\n        patient['state'] = \"TRUE\";\n    }\n    this.hospital.releasePatient(patient).subscribe(\n      (response)=>{\n        this.toaster.successToastr(response.msg,\"Success!\");\n        this.patientLists();\n      },\n      (error)=>{\n        this.toaster.errorToastr(\"Error\",\"Error!\");\n      }\n    );\n  }\n}\n\nexport class Patient {\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Zvcm0vYWRkLXBhdGllbnQvYWRkLXBhdGllbnQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-2\\\"></div>\\n    <div class=\\\"col-md-8\\\">\\n      <div class=\\\"card\\\" style=\\\"margin-top: 4%;\\\">\\n        <div class=\\\"card-header\\\">\\n\\n        </div>\\n        <div class=\\\"card-body\\\">\\n          <form #patientForm=\\\"ngForm\\\" (ngSubmit)=\\\"addPatient(patientForm.value)\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-6\\\">\\n                  <div class=\\\"form-group\\\">\\n                      <label for=\\\"\\\">Enter name:</label>\\n                      <input class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"name\\\" ngModel>\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"\\\">Enter contact:</label>\\n                      <input class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"cont\\\" ngModel>\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"\\\">Description:</label>\\n                      <textarea class=\\\"form-control\\\" name=\\\"descr\\\" ngModel  cols=\\\"30\\\" rows=\\\"4\\\"></textarea>\\n                    </div>\\n              </div>\\n              <div class=\\\"col-md-6\\\">\\n                  <div class=\\\"form-group\\\">\\n                      <label for=\\\"\\\">Select building:</label>\\n                      <select class=\\\"form-control\\\" name=\\\"building\\\" ngModel>\\n                        <option>A</option>\\n                        <option>B</option>\\n                        <option>C</option>\\n                      </select>\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"\\\">Enter room:</label>\\n                      <input class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"room\\\" ngModel>\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"\\\">Enter bed no:</label>\\n                      <input class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"bed\\\" ngModel>\\n                    </div>\\n                </div>\\n            </div>\\n          \\n          \\n            <input type=\\\"submit\\\" value=\\\"Add patient\\\" class=\\\"btn btn-primary\\\">\\n          </form>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-md-2\\\"></div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport {PatientService} from '../../service/patient.service';\nimport { ToastrManager } from 'ng6-toastr-notifications';\nimport {Router} from '@angular/router';\n@Component({\n  selector: 'app-add-patient',\n  templateUrl: './add-patient.component.html',\n  styleUrls: ['./add-patient.component.css']\n})\nexport class AddPatientComponent implements OnInit {\n\n  constructor(\n    private pat_service:PatientService,\n    public toastr: ToastrManager,\n    private router:Router\n  ) { }\n\n  ngOnInit() {\n  }\n\n  addPatient(form) : void {\n    form['hospital_id'] =  this.pat_service.getUser().id;\n      this.pat_service.addPatient(form).subscribe(\n        (response)=>{\n          console.log(response)\n          this.toastr.successToastr(response.msg, 'Success!');\n            this.router.navigate(['hospital']);\n        },\n        (error)=>{\n          console.log(error)\n        }\n      )\n  }\n}\n","module.exports = \"#loginFrame{\\n    margin-top:100px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZm9ybS9sb2dpbi1ob3NwaXRhbC9sb2dpbi1ob3NwaXRhbC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksaUJBQWlCO0NBQ3BCIiwiZmlsZSI6InNyYy9hcHAvZm9ybS9sb2dpbi1ob3NwaXRhbC9sb2dpbi1ob3NwaXRhbC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiI2xvZ2luRnJhbWV7XG4gICAgbWFyZ2luLXRvcDoxMDBweDtcbn0iXX0= */\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-md-3\\\"></div>\\n  <div class=\\\"col-md-5\\\">\\n    <div class=\\\"card\\\" id=\\\"loginFrame\\\">\\n    \\n      <div class=\\\"card-body\\\">\\n          <form class=\\\"\\\" #login=\\\"ngForm\\\" (ngSubmit)=\\\"loginHospital(login.value)\\\">\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"\\\">Enter email:</label>\\n                <input  class =\\\"form-control\\\" type=\\\"email\\\" name=\\\"email\\\"  ngModel>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"\\\">Ener password:</label>\\n                <input class=\\\"form-control\\\" type=\\\"password\\\" name=\\\"password\\\" ngModel>\\n              </div>\\n              <input type=\\\"submit\\\" value=\\\"Login\\\" class=\\\"btn btn-primary\\\">\\n              <a routerLink=\\\"regiserHospital\\\" style=\\\"float: right;\\\" class=\\\"text-info\\\">New Hospital</a>\\n          </form>\\n      </div>\\n     \\n    </div>\\n  </div>\\n  <div class=\\\"col-md-4\\\"></div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport {HospitalService} from '../../service/hospital.service';\nimport { ToastrManager } from 'ng6-toastr-notifications';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-login-hospital',\n  templateUrl: './login-hospital.component.html',\n  styleUrls: ['./login-hospital.component.css']\n})\nexport class LoginHospitalComponent implements OnInit {\n\n  constructor(\n    private hospital:HospitalService,\n    private toaster:ToastrManager,\n    private router:Router\n  ) { }\n\n  ngOnInit() {\n    window.localStorage.clear();\n  } \n  loginHospital(form) : void {\n      this.hospital.loginHospital(form).subscribe(\n        (response)=>{\n            this.toaster.successToastr(response.msg,\"Success!\");\n            window.localStorage.setItem(\"user\",JSON.stringify(response));\n            this.router.navigate(['hospital'])\n        },\n        (error)=>{\n            this.toaster.errorToastr(error.msg,\"Error!\");\n        }\n      )\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Zvcm0vcmVnaXN0ci1ob3N0cGl0YWwvcmVnaXN0ci1ob3N0cGl0YWwuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n      <div class=\\\"col-md-2\\\"></div>\\n      <div class=\\\"col-md-8\\\">\\n        <form #regisHot = \\\"ngForm\\\" (ngSubmit)=\\\"registerHospital(regisHot.value)\\\">\\n\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-6\\\">\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"\\\">Name</label>\\n                    <input class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"name\\\" ngModel>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                  <label for=\\\"\\\">contact</label>\\n                  <input class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"contact\\\" ngModel>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                  <label for=\\\"\\\">Email</label>\\n                  <input class=\\\"form-control\\\" type=\\\"email\\\" name=\\\"email\\\" ngModel>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"\\\">Address</label>\\n                    <textarea name=\\\"address\\\"  class=\\\"form-control\\\" cols=\\\"30\\\" rows=\\\"4\\\" ngModel></textarea>\\n                  </div>\\n            </div>\\n            <div class=\\\"col-md-6\\\">\\n             \\n                  <div class=\\\"form-group\\\">\\n                    <label for=\\\"\\\">password</label>\\n                    <input class=\\\"form-control\\\" type=\\\"password\\\" name=\\\"password\\\" ngModel>\\n                  </div>\\n                  <div class=\\\"form-group\\\">\\n                    <label for=\\\"\\\">confirm password:</label>\\n                    <input class=\\\"form-control\\\" type=\\\"password\\\" name=\\\"cnf_password\\\" ngModel>\\n                  </div>\\n            </div>\\n          </div>\\n         \\n         \\n\\n            <input type=\\\"submit\\\" style=\\\"float: right;\\\" class=\\\"btn btn-primary\\\" value=\\\"Register\\\" value=\\\"Register\\\">\\n        </form>\\n      </div>\\n      <div class=\\\"col-md-2\\\"></div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport {HospitalService} from '../../service/hospital.service';\n\nimport { ToastrManager } from 'ng6-toastr-notifications';\nimport {Router} from '@angular/router';\n@Component({\n  selector: 'app-registr-hostpital',\n  templateUrl: './registr-hostpital.component.html',\n  styleUrls: ['./registr-hostpital.component.css']\n})\nexport class RegistrHostpitalComponent implements OnInit {\n\n  constructor(\n    private hospital:HospitalService,\n    public toaster:ToastrManager,\n    private router:Router\n  ) { }\n\n  ngOnInit() {\n  }\n\n  registerHospital(form) : void {\n      this.hospital.registerHospital(form).subscribe(\n        (response)=>{\n            this.toaster.successToastr(response.msg,\"success!\");\n            this.router.navigate(['']);\n        },\n        (error)=>{\n          this.toaster.errorToastr(\"Error\",\"Erro!\");\n        }\n      )\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n@Injectable({\n  providedIn: 'root'\n})\nexport class HospitalService {\n\n   url: any = \"http://52.66.197.146:5000/hospital\";\n  constructor(\n    private http: HttpClient\n  ) { }\n\n\n  registerHospital(payload): Observable<any> {\n    return this.http.post(this.url+\"/registerHospital\", payload);\n  }\n  \n//-------add biilss\naddBills(payload) : Observable<any>{\n  return this.http.post(this.url+\"/addPatientBill\",payload);\n}\n//----release patient \nreleasePatient(payload) : Observable<any> {\n  return this.http.put(this.url+\"/releasePation\",payload);\n}\n  loginHospital(payload) : Observable<any> {\n    return this.http.post(this.url+\"/loginHospital\",payload);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport { Observable } from 'rxjs';\n@Injectable({\n  providedIn: 'root'\n})\nexport class PatientService {\n\n  private url :any  = \"http://52.66.197.146:5000/users\";\n  private urlH:any =\"http://52.66.197.146:5000/hospital\";\n  constructor(\n    private http:HttpClient\n  ) { }\n\n  addPatient(payload) : Observable<any> {\n   // return this.http.post(this.url+\"/addPatient\",payload);\n   return this.http.post(this.url+\"/addPatient\",payload);\n  }\n  //--------list of patient\n  patientList () : Observable<any>\n  {\n    return this.http.get(this.urlH+\"/patientsList?id=\"+this.getUser().id);\n  }\n  getUser() :any {\n    return JSON.parse(window.localStorage.getItem(\"user\"));\n  }\n}\n\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserDetailsService {\n\n  constructor() { \n    if(window.localStorage.getItem('user') ===null){\n      window.localStorage.setItem(\"user\",JSON.stringify({\n        id:\"\",\n        token:\"\"\n      }))\n    }\n    \n  }\n\n  /**\n   * \n   */\n  getUserId():any {\n      return this.getUser().id;\n  }\n  /**\n   * get token\n   */\n  getUserToken() : any {\n    return this.getUser().token;\n  }\n\n  getUser() : any {\n    return JSON.parse(window.localStorage.getItem('user'));\n  }\n  /**\n   * is user is logged in \n   */\n  isUserLoggedIn () : boolean {\n    return this.getUser().id != undefined && this.getUser().id != \"\" && this.getUser().id != null;\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}